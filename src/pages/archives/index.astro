---
import { type IconName } from "@/components/Elements/Icon"
import { PostCard } from "@/components/Elements/PostCard"
import { Tabs, type TabsProps } from "@/components/Elements/Tabs"
import { BaseLayout } from "@/layouts/BaseLayout"
import { getPosts } from "@/lib/posts"

const posts = await getPosts()
posts.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime())

type PostsType = typeof posts
type PostsByYearType = { [year: number]: PostsType }

const postsByYear = posts.reduce<PostsByYearType>((acc, post) => {
  const year = new Date(post.data.date).getFullYear()
  if (!acc[year]) {
    acc[year] = []
  }
  acc[year].push(post)
  return acc
}, {})

const tabProps: TabsProps = {
  tabs: [
    {
      value: "アーカイブ",
      icon: "tabler:archive",
      href: "/archives",
      isActive: true,
    },
    {
      value: "カテゴリ",
      icon: "tabler:category",
      href: "/categories",
    },
    {
      value: "タグ",
      icon: "tabler:tag",
      href: "/tags",
    },
  ],
}
---

<BaseLayout
  title="アーカイブ"
  description="東京理科大学 電子計算機研究会 プログラミング班"
  og={{
    url: Astro.site!,
  }}
>
  <main class="mx-auto flex w-full max-w-screen-lg flex-1 flex-col gap-6 py-12">
    <div>
      <Tabs {...tabProps} />
    </div>

    <ol class="relative border-s border-border-muted">
      {
        Object.entries(postsByYear)
          .sort((a, b) => Number(b[0]) - Number(a[0]))
          .map(([year, posts]) => {
            return (
              <li class="mb-10 ms-4">
                <div class="absolute -start-1.5 mt-1.5 size-3 rounded-full border border-border-muted bg-border-muted" />
                <time class="mb-3 text-lg font-normal leading-none text-fg-muted">{year}</time>
                <div class="flex flex-col gap-3 py-3">
                  {posts.map((post, i) => {
                    return (
                      <PostCard
                        title={post.data.title}
                        icon={post.data.icon as IconName}
                        id={post.id}
                        body={post.body}
                        tags={post.data.tags ?? []}
                        categories={post.data.categories.map((category) => category.id)}
                        date={post.data.date}
                        lastmod={post.data.lastmod}
                        animationDelay={160 * i}
                      />
                    )
                  })}
                </div>
              </li>
            )
          })
      }
    </ol>
  </main>
</BaseLayout>
