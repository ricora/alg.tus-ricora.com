---
import "@/styles/katex.css"
import { Icon, type IconName } from "@/components/Elements/Icon"
import { CategoryCard } from "@/components/Elements/PostCard/CategoryCard"
import { TagCard } from "@/components/Elements/PostCard/TagCard"
import { TOC } from "@/components/Elements/TOC"
import { BaseLayout, type BaseLayoutProps } from "@/layouts/BaseLayout"
import { formatDate } from "@/lib/date"
import { githubRepositoryUrl } from "@/lib/metadata"
import { calculateReadingTime } from "@/lib/posts"
import type { CollectionEntry } from "astro:content"
import { mdxComponents } from "@/lib/mdx"
import * as path from "node:path"
import { render } from "astro:content"

export type Props = Partial<BaseLayoutProps> & {
  post: CollectionEntry<"posts">
}
const { post, ...props } = Astro.props

const { Content, headings } = await render(post)

const date = formatDate(post.data.date)
const lastmod = post.data.lastmod ? formatDate(post.data.lastmod) : undefined
const readingTime = calculateReadingTime(post.body ?? "")
const categories = post.data.categories
const tags = post.data.tags || []

const postUrl = new URL(path.join("posts", post.id), Astro.site)
const ogImageUrl = new URL(path.join("posts", `${post.id}.png`), Astro.site)

const tocHeadings = headings.filter((heading) => heading.depth === 2 || heading.depth === 3)

const githubRepositoryUrlWithSlash = githubRepositoryUrl.endsWith("/") ? githubRepositoryUrl : `${githubRepositoryUrl}/`
const githubEditUrl = new URL(`edit/main/src/content/posts/${post.id}`, githubRepositoryUrlWithSlash)
---

<BaseLayout
  title={post.data.title}
  og={{
    type: "article",
    url: postUrl,
    image: ogImageUrl,
    ...props.og,
  }}
  twitter={{
    card: "summary_large_image",
    image: ogImageUrl,
    title: post.data.title,
  }}
  {...props}
>
  <main class="my-12 flex flex-1">
    <article class="mx-auto">
      <header class="mx-auto flex max-w-screen-md flex-col items-center gap-6">
        <Icon name={post.data.icon as IconName} class="size-44 rounded-full border bg-bg-default p-8" pagefindImage />
        <h1 class="text-3xl font-bold" data-pagefind-meta="title">{post.data.title}</h1>
        <div class="flex flex-wrap">
          {categories.map((category) => <CategoryCard id={category.id} />)}
          {tags.map((tag) => <TagCard id={tag} />)}
        </div>
        <div class="flex w-full max-w-lg flex-row flex-wrap justify-between text-center">
          <div class="mx-auto my-2">
            <div class="font-bold">投稿</div>
            <div>
              {date}
            </div>
          </div>
          {
            lastmod && post.data.date.getTime() !== post.data.lastmod?.getTime() && (
              <div class="mx-auto my-2">
                <div class="font-bold">最終更新</div>
                <div>{lastmod}</div>
              </div>
            )
          }
          <div class="mx-auto my-2">
            <div class="font-bold">読了時間</div>
            <div>約 {readingTime} 分</div>
          </div>
        </div>
      </header>
      <div class="mt-16 flex flex-row gap-5">
        <section class="prose max-w-screen-md dark:prose-invert">
          <Content components={mdxComponents} />
        </section>
        {
          tocHeadings.length > 0 && (
            <aside class="relative mx-5 hidden w-56 xl:block">
              <div class="sticky top-16">
                <TOC headings={headings} client:idle />
              </div>
            </aside>
          )
        }
      </div>
      <div class="flex flex-wrap py-4">
        <a
          href={githubEditUrl.href}
          class="m-1 flex flex-row items-center gap-1 rounded-lg border bg-bg-default px-4 py-2 text-sm transition hover:bg-bg-muted"
        >
          <Icon name="tabler:pencil" class="size-5 text-fg-muted" />
          <div>GitHubで編集する</div>
        </a>
      </div>
    </article>
  </main>
</BaseLayout>
