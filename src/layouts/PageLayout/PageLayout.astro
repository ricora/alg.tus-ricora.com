---
import "@/styles/katex.css"
import { BaseLayout, type BaseLayoutProps } from "@/layouts/BaseLayout"
import type { CollectionEntry } from "astro:content"
import { mdxComponents } from "@/lib/mdx"
import { TOC } from "@/components/Elements/TOC"
import { LinkCard } from "@/components/Elements/LinkCard"
import { render } from "astro:content"

export type Props = Partial<BaseLayoutProps> & {
  page: CollectionEntry<"pages">
}
const { page, ...props } = Astro.props

const { Content, headings } = await render(page)

const tocHeadings = headings.filter((heading) => heading.depth === 2 || heading.depth === 3)
---

<BaseLayout
  title={page.data.title}
  og={{
    url: new URL(page.id, Astro.site),
    ...props.og,
  }}
  {...props}
>
  <main class="my-12 flex flex-1">
    <article class="w-full">
      <header class="mx-auto flex max-w-screen-md flex-col items-center gap-6">
        <h1 class="text-4xl font-bold" data-pagefind-meta="title">{page.data.title}</h1>
      </header>
      <div class="mt-16 flex flex-row justify-center gap-5">
        <section class="prose w-full max-w-screen-md dark:prose-invert">
          {
            page.data.links && (
              <div class="flex flex-col gap-6">
                {page.data.links.map((link) => (
                  <LinkCard title={link.title} href={link.website} description={link.description} image={link.image} />
                ))}
              </div>
            )
          }
          <Content components={mdxComponents} />
        </section>
        {
          tocHeadings.length > 0 && (
            <aside class="relative mx-5 hidden w-56 xl:block">
              <div class="sticky top-16">
                <TOC headings={headings} client:idle />
              </div>
            </aside>
          )
        }
      </div>
    </article>
  </main>
</BaseLayout>
